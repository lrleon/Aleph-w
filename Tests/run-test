#!/usr/bin/env ruby
# -*- coding: iso-8859-1 -*-

require 'optparse'
require 'fileutils'

alephw = ENV['ALEPHW']
gtestdir = ENV['GOOGLETEST']

fail 'ALEPHW env var has not been defined' unless alephw
fail 'GOOGLETEST env var has not been defined' unless gtestdir

options = {}
options_parser = OptionParser.new do |opts|
  opts.on('-f name', '--file name', 'prefix name of test spec') do |name|
    options[:name] = name
  end
end

options_parser.parse!

name = options[:name]

fail "option -f prefix test file has not been specified" unless name

if name.end_with? '.cc'
  test_src_name = name
else
  test_src_name = name + '.cc'
end

fail "#{test_src_name} not found" unless File.exists? test_src_name

tgt_name = File.basename test_src_name, '.cc'

compile_line = "clang++ #{test_src_name} "\
               "-std=c++14 -isystem -pthread -I#{alephw} "\
               "-I#{gtestdir}/googletest/include "\
               "-I#{gtestdir}/googlemock/include "\
               "-std=c++14 -Wall -Wextra -Wcast-align -Wno-sign-compare "\
               "-Wno-write-strings -Wno-parentheses -O0 -g "\
               "-L../ -lAleph #{gtestdir}/googletest/make/gtest_main.a "\
               "#{gtestdir}/googlemock/make/gmock_main.a "\
               "-lstdc++ -lgsl -lgslcblas -lm -lpthread -lc -o #{tgt_name}"

puts compile_line

compile_status = system(compile_line)

fail "Test compilation failed" unless compile_status

command_line = "./#{tgt_name}"

puts "#{command_line}"
test_status = system(command_line)

fail "Test has aborted" unless test_status

puts "Test for #{name} executed successfully"


