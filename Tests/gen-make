#!/usr/bin/env ruby
# -*- coding: iso-8859-1 -*-

require 'optparse'

alephw = ENV['ALEPHW']
gtestdir = ENV['GOOGLETEST']

fail 'ALEPHW env var has not been defined' unless alephw
fail 'GOOGLETEST env var has not been defined' unless gtestdir

test_list = `cat tests-list`.split("\n")
srcs = test_list.map { |s| "#{s}.cc" }.join ' '

istr = %{
DEPEND = sh ./depend.sh

# just delete or comment these four lines if you wish to use gnu
# compiler suite

CC = clang
AS = llvm-as
AR = llvm-ar clq
LD = llvm-link

CCLINK = clang++ -fsanitize=address,undefined

# now comment clang++ line and uncomment c++ line. Flag for standard could
# change according to compiler version. This flag is for gcc 4.6.3. On
# 4.7.x should work -std=c++11
CXX = clang++

GTESTDIR=$(shell echo $$GOOGLETEST)

SRCS=#{srcs}

LOCALLIBS=	../libAleph.a

DEPLIBS=	../libAleph.a

#SYSLIBS=	 -lgmpxx -lgmp -lstdc++ -lgtest_main -lpthread -lasprintf -lmpfr -lgsl -lgslcblas -lm -lX11 -lc
SYSLIBS=	 -lgmpxx -lgmp -lstdc++ -lgtest_main -lgtest -lpthread -lasprintf -lmpfr -lgsl -lgslcblas -lm -lX11 -lc

INCLUDES=	-I../ -I$(GTESTDIR)/googletest/include \
		-I$(GTESTDIR)/googlemock/include

MSG=-DMESSAGES

WARN=	-Wall -Wextra -Wcast-align -Wno-sign-compare -Wno-write-strings -Wno-parentheses

FLAGS=-DDEBUG -fsanitize=address,undefined -O0 -g3 -D_REENTRANT -D__extern_always_inline="extern __always_inline"

DEFINES=	-D_GLIBCXX__PTHREADS

OPTIONS=	$(FLAGS) $(MSG) $(WARN) $(DEFINES)

CXXFLAGS=	 -std=c++14 $(INCLUDES) $(OPTIONS)
}

test_list.each do |s|
  istr += "AllTarget(#{s})\n"\
          "NormalProgramTarget(#{s},#{s}.o,$(DEPLIBS),$(LOCALLIBS),$(SYSLIBS))\n"\
          "\n"
end

istr += "\n"\
        "DependTarget()"

puts "#{istr}"
